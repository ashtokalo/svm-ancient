{============================================================================}
{====  BIN to PAS Converter Version 1.1  Copyright (c) 1999 ShAG Studio  ====}
{====------------------------------------------------------┌───────────┐-====}
{==== ░░▒▒▓▓ Файл создан с помощью программы BINPAS ▓▓▒▒░░ │Version 1.1│ ====}
{====------------------------------------------------------└───────────┘-====}
{====   Список дополнительных возможностей при использовании модуля:     ====}
{==== ■ Если при запуске программы к которой будет подключен этот модуль ====}
{==== в командной строчке дать первым параметром ключ /SAF, то на экране ====}
{==== будет выведен список всех подключенных дополнительных файлов созда ====}
{==== нных программой BINPAS.                                            ====}
{==== ■ Если при запуске программы к которой будет подключен этот модуль ====}
{==== в командной строчке дать первым параметром ключ *EAF, то все файлы ====}
{==== подключенный с помощью программы BINPAS будут  созданны в каталоге ====}
{==== из которого запускается программа.                                 ====}
{==== ■ Если при запуске программы к которой будет подключен этот модуль ====}
{==== в командной строчке дать первым  параметром ключ *<имя файла>, без ====}
{==== скобок <>, то если файл с таким  именем был подключенн к программе ====}
{==== он будет создан в каталоге из которого была запущенна программа.   ====}
{====--------------------------------------------------------------------====}
{==== Имя файла оригинала: colors.tab                                    ====}
{============================================================================}
                               UNIT Colors;
{============================================================================}
                                INTERFACE
{============================================================================}
 USES Dos,Crt;

 TYPE  Colors_FileType = ARRAY [0..767] OF Byte;
 CONST Colors_File: Colors_FileType = (
          0,   0,   0,   0,   0,  42,   0,  42,   0,   0,  42,  42,  42,   0, 
          0,  42,   0,  42,  32,  32,   0,  42,  42,  42,   0,   0,  21,   0, 
          0,  63,   0,  42,  21,   0,  42,  63,  42,   0,  21,  42,   0,  63, 
         42,  42,  21,  42,  42,  63,   0,  21,   0,   0,  21,  42,   0,  63, 
          0,   0,  63,  42,  42,  21,   0,  42,  21,  42,  42,  63,   0,  42, 
         63,  42,   0,  21,  21,   0,  21,  63,   0,  63,  21,   0,  63,  63, 
         42,  21,  21,  42,  21,  63,  42,  63,  21,  42,  63,  63,  21,   0, 
          0,  21,   0,  42,  21,  42,   0,  21,  42,  42,  63,   0,   0,  63, 
          0,  42,  63,  42,   0,  63,  42,  42,  21,   0,  21,  21,   0,  63, 
         21,  42,  21,  21,  42,  63,  63,   0,  21,  63,   0,  63,  63,  42, 
         21,  63,  42,  63,  21,  21,   0,  21,  21,  42,  21,  63,   0,  21, 
         63,  42,  63,  21,   0,  63,  21,  42,  63,  63,   0,  63,  63,  42, 
         21,  21,  21,  21,  21,  63,  21,  63,  21,  21,  63,  63,  63,  21, 
         21,  63,  21,  63,  63,  63,  21,  63,  63,  63,  63,  31,  31,  63, 
         39,  31,  63,  47,  31,  63,  55,  31,  63,  63,  31,  55,  63,  31, 
         47,  63,  31,  39,  63,  31,  31,  63,  31,  31,  63,  39,  31,  63, 
         47,  31,  63,  55,  31,  63,  63,  31,  55,  63,  31,  47,  63,  31, 
         39,  63,  45,  45,  63,  49,  45,  63,  54,  45,  63,  58,  45,  63, 
         63,  45,  63,  63,  45,  58,  63,  45,  54,  63,  45,  49,  63,  45, 
         45,  63,  49,  45,  63,  54,  45,  63,  58,  45,  63,  63,  45,  58, 
         63,  45,  54,  63,  45,  49,  63,  45,  45,  63,  45,  45,  63,  49, 
         45,  63,  54,  45,  63,  58,  45,  63,  63,  45,  58,  63,  45,  54, 
         63,  45,  49,  63,   0,   0,  28,   7,   0,  28,  14,   0,  28,  21, 
          0,  28,  28,   0,  28,  28,   0,  21,  28,   0,  14,  28,   0,   7, 
         28,   0,   0,  28,   7,   0,  28,  14,   0,  28,  21,   0,  28,  28, 
          0,  21,  28,   0,  14,  28,   0,   7,  28,   0,   0,  28,   0,   0, 
         28,   7,   0,  28,  14,   0,  28,  21,   0,  28,  28,   0,  21,  28, 
          0,  14,  28,   0,   7,  28,  14,  14,  28,  17,  14,  28,  21,  14, 
         28,  24,  14,  28,  28,  14,  28,  28,  14,  24,  28,  14,  21,  28, 
         14,  17,  28,  14,  14,  28,  17,  14,  28,  21,  14,  28,  24,  14, 
         28,  28,  14,  24,  28,  14,  21,  28,  14,  17,  28,  14,  14,  28, 
         14,  14,  28,  17,  14,  28,  21,  14,  28,  24,  14,  28,  28,  14, 
         24,  28,  14,  21,  28,  14,  17,  28,  20,  20,  28,  22,  20,  28, 
         24,  20,  28,  26,  20,  28,  28,  20,  28,  28,  20,  26,  28,  20, 
         24,  28,  20,  22,  28,  20,  20,  28,  22,  20,  28,  24,  20,  28, 
         26,  20,  28,  28,  20,  26,  28,  20,  24,  28,  20,  22,  28,  20, 
         20,  28,  20,  20,  28,  22,  20,  28,  24,  20,  28,  26,  20,  28, 
         28,  20,  26,  28,  20,  24,  28,  20,  22,  28,   0,   0,  16,   4, 
          0,  16,   8,   0,  16,  12,   0,  16,  16,   0,  16,  16,   0,  12, 
         16,   0,   8,  16,   0,   4,  16,   0,   0,  16,   4,   0,  16,   8, 
          0,  16,  12,   0,  16,  16,   0,  12,  16,   0,   8,  16,   0,   4, 
         16,   0,   0,  16,   0,   0,  16,   4,   0,  16,   8,   0,  16,  12, 
          0,  16,  16,   0,  12,  16,   0,   8,  16,   0,   4,  16,   8,   8, 
         16,  10,   8,  16,  12,   8,  16,  14,   8,  16,  16,   8,  16,  16, 
          8,  14,  16,   8,  12,  16,   8,  10,  16,   8,   8,  16,  10,   8, 
         16,  12,   8,  16,  14,   8,  16,  16,   8,  14,  16,   8,  12,  16, 
          8,  10,  16,   8,   8,  16,   8,   8,  16,  10,   8,  16,  12,   8, 
         16,  14,   8,  16,  16,   8,  14,  16,   8,  12,  16,   8,  10,  16, 
         11,  11,  16,  12,  11,  16,  13,  11,  16,  15,  11,  16,  16,  11, 
         16,  16,  11,  15,  16,  11,  13,  16,  11,  12,  16,  11,  11,  16, 
         12,  11,  16,  13,  11,  16,  15,  11,  16,  16,  11,  15,  16,  11, 
         13,  16,  11,  12,  16,  11,  11,  16,  11,  11,  16,  12,  11,  16, 
         13,  11,  16,  15,  11,  16,  16,  11,  15,  16,  11,  13,  16,  11, 
         12,  16,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 
          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0);
      Colors_FileName: String = 'colors.tab';
      Colors_FileSize: LongInt = 768;

 {Функция Creat_Colors_File создает точно такой же файл из которого
  был сделан это PAS файл. Если файл создан удачно функция возвращает
  TRUE если файл создать не удалось функция возвращает FALSE}
 FUNCTION  Creat_Colors_File: Boolean;

{============================================================================}
                                IMPLEMENTATION
{============================================================================}

 VAR fs, fs1: String;
     N: Word;
 {Функция Creat_Colors_File создает точно такой же файл из которого
  был сделан это PAS файл. Если файл создан удачно функция возвращает
  TRUE если файл создать не удалось функция возвращает FALSE}
 FUNCTION  Creat_Colors_File: Boolean;
 VAR f: File OF Colors_FileType;
 BEGIN
  Creat_Colors_File:=False;
  IF DiskFree(0) < Colors_FileSize+100 THEN Exit;
  Assign(f,Colors_FileName);
  {$I-}
  ReWrite(f);
  {$I+}
  IF IOResult = 0 THEN BEGIN
   Write(f,Colors_File);
   Creat_Colors_File:=True;
   Close(f);
  END;
 END;

{===== BIN to PAS Converter Version 1.1  Copyright (c) 1999 ShAG Studio =====}
 BEGIN
  fs1:=Colors_FileName;
  FOR n:=0 TO Length(fs1) DO fs1[n]:=UpCase(fs1[n]);
  fs:=ParamStr(1);
  IF fs <> '' THEN FOR n:=0 TO Length(fs) DO fs[n]:=UpCase(fs[n]);
  IF fs = '/SAF' THEN WriteLn('File name: ',Colors_FileName:12,'    File size:',(Colors_FileSize*1.0):11:0,' bytes.');
  IF fs = '*'+fs1 THEN BEGIN
   Write('Extracting ',fs1,' '); 
   Creat_Colors_File; 
   GotoXY(38, WhereY);
   WriteLn('Ok')
  END ELSE
  IF fs = '*EAF' THEN BEGIN
   Write('Extracting ',fs1,' '); 
   Creat_Colors_File; 
   GotoXY(38, WhereY);
   WriteLn('Ok')
  END;
 END.
{===== BIN to PAS Converter Version 1.1  Copyright (c) 1999 ShAG Studio =====}