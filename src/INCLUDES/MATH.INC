 ;---------------------------------------------------------------------------
 ;                               Mathematics
 ;                               Version 1.0
 ;                      Copyright (C) 1999 ShAG Studio
 ;---------------------------------------------------------------------------
 ;    Этот  модуль поможет  вам без проблем работать с вещественными числами.
 ; Вещественное  число  занимает  8  байт  и  может  храниться в 8-и байтовых
 ; регистрах.   Вещественные  числа  с  которыми  вы  будете  работать  имеют
 ; следующий  диапазон  допустимых  значений:  1.7e-308  .. 1.7e+308. Если вы
 ; попытаетесь  использовать  вещественные  числа  при  работе с стандартными
 ; процедурами   вы   получите  совершенно  неправельный  результат,  поэтому
 ; предварительно  вы  должны  провести  приведение типов, т.е. преобразовать
 ; вещественное число в обычное восьми байтное целое или наоборот.
 ;
 ; Список процедур доступных для вызова:
 ;    FloatAdd     - сложение двух вещественных чисел
 ;    FloatSub     - вычитание двух вещественных чисел
 ;    FloatMul     - умножение двух вещественных чисел
 ;    FloatDiv     - деление двух вещественных чисел
 ;    Round        - Округлить по правилам вещественное число в целое
 ;    Truncate     - Преобразовать целую часть вещественного числа в целое
 ;    Int          - Обнулить дробную часть вещественного числа
 ;    Frac         - Обнулить целую часть вещественного числа
 ;    IntToFloat   - Преобразовать целое в вещественное число
 ;    Sqrt         - Вернуть квадратный корень из вещественного числа
 ;    RandomInt    - Сгенерировать случайное целое число
 ;    Random       - Сгенерировать случайное вещественное число
 ;    FloatAbs     - Возвращает вещественное число по модулю
 ;    Abs          - Возвращает целое число по модулю
 ;    Sin          - Возвращает значение тригонометрической функции Sin
 ;    Cos          - Возвращает значение тригонометрической функции Cos
 ;    Tan          - Возвращает значение тригонометрической функции Tan
 ;    CTan         - Возвращает значение тригонометрической функции CTan
 ;    ArcTan       - Возвращает значение тригонометрической функции ArcTan
 ;    Ln           - Возвращает значение натурального логарифма
 ;    Exp          - Возвращает значение експоненты вещественного числа
 ;    Pi           - Возвращает значение числа PI
 ;
 ;    Чтобы использовать этот модуль вы должны вставить в свою программу
 ; следующюю строку: INCLUDE Math.inc   или добавить через запятую, если
 ; директива INCLUDE уже где-то использовалась.
 ;---------------------------------------------------------------------------

 ;---------------------------------------------------------------------------
 ; FloatAdd - сложение двух вещественных чисел
 ;---------------------------------------------------------------------------
 ; Вход:
 ;  LBX - первое вещественное число
 ;  LCX - второе вещественное число
 ; Выход:
 ;  LBX - результат сложения
 ;  LCX - второе вещественное число
 ; Регистры:
 ;  LBX, LCX
 ;---------------------------------------------------------------------------
 PROC FloatAdd
  PUSH LAX
  MOV  LAX, 0
  CSP  1
  POP  LAX
  RET

 ;---------------------------------------------------------------------------
 ; FloatSub - вычитание двух вещественных чисел
 ;---------------------------------------------------------------------------
 ; Вход:
 ;  LBX - первое вещественное число
 ;  LCX - второе вещественное число
 ; Выход:
 ;  LBX - результат вычитания
 ;  LCX - второе вещественное число
 ; Регистры:
 ;  LBX, LCX
 ;---------------------------------------------------------------------------
 PROC FloatSub
  PUSH LAX
  MOV  LAX, 1
  CSP  1
  POP  LAX
  RET

 ;---------------------------------------------------------------------------
 ; FloatMul - умножение двух вещественных чисел
 ;---------------------------------------------------------------------------
 ; Вход:
 ;  LBX - первое вещественное число
 ;  LCX - второе вещественное число
 ; Выход:
 ;  LBX - результат умножения
 ;  LCX - второе вещественное число
 ; Регистры:
 ;  LBX, LCX
 ;---------------------------------------------------------------------------
 PROC FloatMul
  PUSH LAX
  MOV  LAX, 2
  CSP  1
  POP  LAX
  RET

 ;---------------------------------------------------------------------------
 ; FloatDiv - деление двух вещественных чисел
 ;---------------------------------------------------------------------------
 ; Вход:
 ;  LBX - первое вещественное число
 ;  LCX - второе вещественное число
 ; Выход:
 ;  LBX - результат деления
 ;  LCX - второе вещественное число
 ;  Если делитель равен 0, то оба вещественных числа обнуляются
 ; Регистры:
 ;  LBX, LCX
 ;---------------------------------------------------------------------------
 PROC FloatDiv
  PUSH LAX
  MOV  LAX, 3
  CSP  1
  POP  LAX
  RET

 ;---------------------------------------------------------------------------
 ; Round - Округлить по правилам вещественное число в целое
 ;---------------------------------------------------------------------------
 ; Вход:
 ;  LBX - округляемое вещественное число
 ; Выход:
 ;  LBX - результат округления - нормальное целое число
 ; Регистры:
 ;  LBX
 ;---------------------------------------------------------------------------
 PROC Round
  PUSH LAX
  MOV  LAX, 4
  CSP  1
  POP  LAX
  RET

 ;---------------------------------------------------------------------------
 ; Truncate - Преобразовать целую часть вещественного числа в целое
 ;---------------------------------------------------------------------------
 ; Вход:
 ;  LBX - преобразуемое вещественное число
 ; Выход:
 ;  LBX - результат преобразования - нормальное целое число
 ; Регистры:
 ;  LBX
 ;---------------------------------------------------------------------------
 PROC Truncate
  PUSH LAX
  MOV  LAX, 5
  CSP  1
  POP  LAX
  RET

 ;---------------------------------------------------------------------------
 ; Int - Обнулить дробную часть вещественного числа
 ;---------------------------------------------------------------------------
 ; Вход:
 ;  LBX - вещественное число
 ; Выход:
 ;  LBX - результат обнуления - вещественное число
 ; Регистры:
 ;  LBX
 ;---------------------------------------------------------------------------
 PROC Int
  PUSH LAX
  MOV  LAX, 7
  CSP  1
  POP  LAX
  RET

 ;---------------------------------------------------------------------------
 ; Frac - Обнулить целую часть вещественного числа
 ;---------------------------------------------------------------------------
 ; Вход:
 ;  LBX - вещественное число
 ; Выход:
 ;  LBX - результат обнуления - вещественное число
 ; Регистры:
 ;  LBX
 ;---------------------------------------------------------------------------
 PROC Frac
  PUSH LAX
  MOV  LAX, 8
  CSP  1
  POP  LAX
  RET

 ;---------------------------------------------------------------------------
 ; IntToFloat - Преобразовать целое в вещественное число
 ;---------------------------------------------------------------------------
 ; Вход:
 ;  LBX - нормальное целое число
 ; Выход:
 ;  LBX - результат преобразования - вещественное число
 ; Регистры:
 ;  LBX
 ;---------------------------------------------------------------------------
 PROC IntToFloat
  PUSH LAX
  MOV  LAX, 9
  CSP  1
  POP  LAX
  RET

 ;---------------------------------------------------------------------------
 ; Sqrt - Вернуть квадратный корень из вещественного числа
 ;---------------------------------------------------------------------------
 ; Вход:
 ;  LBX - вещественное число
 ; Выход:
 ;  LBX - квадратный корень из вещественного числа - вещественное число
 ; Регистры:
 ;  LBX
 ;---------------------------------------------------------------------------
 PROC Sqrt
  PUSH LAX
  MOV  LAX, 10
  CSP  1
  POP  LAX
  RET

 ;---------------------------------------------------------------------------
 ; RandomInt - Сгенерировать случайное целое число
 ;---------------------------------------------------------------------------
 ; Вход:
 ;  LBX - нормальное целое число - верхний предел генерируемого числа
 ; Выход:
 ;  LBX - случайное нормальное целое число
 ; Регистры:
 ;  LBX
 ;---------------------------------------------------------------------------
 PROC RandomInt
  PUSH LAX
  MOV  LAX, 30
  CSP  1
  POP  LAX
  RET

 ;---------------------------------------------------------------------------
 ; Random - Сгенерировать случайное вещественное число
 ;---------------------------------------------------------------------------
 ; Вход:
 ;  LBX - вещественное число - верхний предел генерируемого числа
 ; Выход:
 ;  LBX - случайное вещественное число
 ; Регистры:
 ;  LBX
 ;---------------------------------------------------------------------------
 PROC Random
  PUSH LAX
  MOV  LAX, 31
  CSP  1
  POP  LAX
  RET

 ;---------------------------------------------------------------------------
 ; FloatAbs - Возвращает вещественное число по модулю
 ;---------------------------------------------------------------------------
 ; Вход:
 ;  LBX - вещественное число
 ; Выход:
 ;  LBX - вещественное число по модулю
 ; Регистры:
 ;  LBX
 ;---------------------------------------------------------------------------
 PROC FloatAbs
  PUSH LAX        ; Сохраняем регистры, которые мы используем
  PUSH LCX        ;
  MOV  LAX, LBX   ; сохраняем первоначальное вещественное число в LAX
  CALL Truncate   ; преобразуем вещественное в целое
  CMP  LBX, 0     ; проверяем - если целое отриательное, то
  JNL  @Plus      ;
  MOV  LBX, -1    ; заносим в регистр -1 и
  CALL IntToFloat ; преобразовуем его в вещественное
  MOV  LCX, LAX   ; востанавливаем первоначальное вещественное число в LCX
  XCHG LBX, LCX   ; меняем местами множетили
  CALL FloatMul   ; произодим умножение первоначального вещественно числа
  JMP  @Exit      ; на -1, чтобы убрать знак и выходим
  @Plus:          ;
  MOV  LBX, LAX   ; если, цело - положительное, то востанавливаем
  @Exit:          ; первоначальное вещественное число и выходим
  POP  LCX        ; Востанавливаем регистры, которые мы использовали
  POP  LAX        ;
  RET

 ;---------------------------------------------------------------------------
 ; Abs - Возвращает целое число по модулю
 ;---------------------------------------------------------------------------
 ; Вход:
 ;  LBX - целое число
 ; Выход:
 ;  LBX - целое число по модулю
 ; Регистры:
 ;  LBX
 ;---------------------------------------------------------------------------
 PROC Abs
  CMP  LBX, 0
  JNL  @Exit
  NEG  LBX
  @Exit:
  RET

 ;---------------------------------------------------------------------------
 ; Sin - Возвращает значение тригонометрической функции Sin
 ;---------------------------------------------------------------------------
 ; Вход:
 ;  LBX - вещественное число
 ; Выход:
 ;  LBX - значение тригонометрической функции Sin для данного числа
 ; Регистры:
 ;  LBX
 ;---------------------------------------------------------------------------
 PROC Sin
  PUSH LAX
  MOV  LAX, 11
  CSP  1
  POP  LAX
  RET

 ;---------------------------------------------------------------------------
 ; Cos - Возвращает значение тригонометрической функции Cos
 ;---------------------------------------------------------------------------
 ; Вход:
 ;  LBX - вещественное число
 ; Выход:
 ;  LBX - значение тригонометрической функции Cos для данного числа
 ; Регистры:
 ;  LBX
 ;---------------------------------------------------------------------------
 PROC Cos
  PUSH LAX
  MOV  LAX, 12
  CSP  1
  POP  LAX
  RET

 ;---------------------------------------------------------------------------
 ; Tan - Возвращает значение тригонометрической функции Tan
 ;---------------------------------------------------------------------------
 ; Вход:
 ;  LBX - вещественное число
 ; Выход:
 ;  LBX - значение тригонометрической функции Tan для данного числа
 ; Регистры:
 ;  LBX
 ;---------------------------------------------------------------------------
 PROC Tan
  PUSH LAX
  MOV  LAX, 13
  CSP  1
  POP  LAX
  RET

 ;---------------------------------------------------------------------------
 ; CTan - Возвращает значение тригонометрической функции Sin
 ;---------------------------------------------------------------------------
 ; Вход:
 ;  LBX - вещественное число
 ; Выход:
 ;  LBX - значение тригонометрической функции CTan для данного числа
 ; Регистры:
 ;  LBX
 ;---------------------------------------------------------------------------
 PROC CTan
  PUSH LAX
  MOV  LAX, 14
  CSP  1
  POP  LAX
  RET

 ;---------------------------------------------------------------------------
 ; ArcTan - Возвращает значение тригонометрической функции ArcTan
 ;---------------------------------------------------------------------------
 ; Вход:
 ;  LBX - вещественное число
 ; Выход:
 ;  LBX - значение тригонометрической функции ArcTan для данного числа
 ; Регистры:
 ;  LBX
 ;---------------------------------------------------------------------------
 PROC ArcTan
  PUSH LAX
  MOV  LAX, 17
  CSP  1
  POP  LAX
  RET

 ;---------------------------------------------------------------------------
 ; Ln - Возвращает значение натурального логарифма
 ;---------------------------------------------------------------------------
 ; Вход:
 ;  LBX - вещественное число
 ; Выход:
 ;  LBX - значение натурального логарифма для данного числа
 ; Регистры:
 ;  LBX
 ;---------------------------------------------------------------------------
 PROC Ln
  PUSH LAX
  MOV  LAX, 19
  CSP  1
  POP  LAX
  RET

 ;---------------------------------------------------------------------------
 ; Exp - Возвращает значение експоненты вещественного числа
 ;---------------------------------------------------------------------------
 ; Вход:
 ;  LBX - вещественное число
 ; Выход:
 ;  LBX - значение експоненты для данного числа
 ; Регистры:
 ;  LBX
 ;---------------------------------------------------------------------------
 PROC Exp
  PUSH LAX
  MOV  LAX, 21
  CSP  1
  POP  LAX
  RET

 ;---------------------------------------------------------------------------
 ; Pi - Возвращает значение числа PI
 ;---------------------------------------------------------------------------
 ; Вход:
 ;  нет
 ; Выход:
 ;  LBX - значение числа PI
 ; Регистры:
 ;  LBX
 ;---------------------------------------------------------------------------
 PROC Pi
  PUSH LAX
  MOV  LAX, 6
  CSP  1
  POP  LAX
  RET

 ;---------------------------------------------------------------------------
 ;                               Mathematics
 ;                               Version 1.0
 ;                      Copyright (C) 1999 ShAG Studio
 ;---------------------------------------------------------------------------