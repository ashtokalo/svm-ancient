

                                                  Version  ─┐     ┌───┐
     ▄███████▄ hAG                                          │     │   │
     █       █ ──────────────────────────────────────────   │     │   │
     █          ─┬─  ─┬─ eyboard                            │     │   │
     █           │   ┌┘  ────────────────────────────────   │     │   │
     █           │  ┌┘    █         █                     ──┴──  └───┘
     ▀███████▄   │ ┌┘     ██       ██ ──────────────────────────────────
             █   │┌┘      █ █     █ █                             Driver
             █   ├┤       █  █   █  █
             █   │└┐      █   █ █   █  ▄█████▄  █     █  ▄█████▄  ██████
     █       █   │ └┐     █    █    █  █     █  █     █  █     ▀  █
     ▀███████▀   │  └┐    █         █  █     █  █     █  █        █
                 │   └┐   █         █  █     █  █     █  ▀█████▄  █████
                ─┴─  ─┴─  █         █  █     █  █     █        █  █
                          █         █  █     █  █    ▄█  ▄     █  █
                          █         █  ▀█████▀   █████▀▌ ▀█████▀  ██████

   ShAG Keyboard Mouse Driver  Version 1.0  Copyright (c) 1999 ShAG Studio

                                Luhansk, 1999

                           РУКОВОДСТВО ПОЛЬЗОВАТЕЛЯ

                                 ОГЛАВЛЕНИЕ:
          1. Назначение программы.
          2. Как этим пользоваться.
          3. Клавиши управления.
          4. Ключи командной строки.
          Приложение: Таблица функций драйвера миши.


 1. НАЗНАЧЕНИЕ ПРОГРАММЫ.
 ────────────────────────────────────────────────────────────────────────────
    SKMouse  Driver предназначен для эмуляции работы манипулятора типа мышь (
 в   операционной  системе  MS-DOS,  PC-DOS  и  им  подобным,  Windows  -  не
 поддерживается)   при   его  отсутствии.  Данная  версия  драйвера  является
 упрощенной  версией  драйвера,  поэтому  в  ней  реализованы  не все функции
 полноценного  драйвера  мыши.  В  конце  данного файла будет приведен список
 функций  драйвера  мыши  и указаны не реализованные функции. У драйвера есть
 еще   один  большой  недостаток  -  он  не  потдерживает  вывод  указателя в
 графических  режимах.  Но  этот  недостаток  можно устранить если перед этим
 драйвером  запустить полноценный драйвер мыши, например, Genius Mouse Driver
 (version  10.20),  который  не  проверяет  наличие  мыши  в компьютере. Если
 SKMouse  Driver обнаружит в памяти другой драйвер мыши он будет использовать
 его для вывода курсора в графическом режиме. С большенством программ которые
 используют   мышь  эта  версия  драйвера  работает  без  проблем,  что  дает
 возможность  временно  использовать  его  если  нет  мыши,  поломан  один из
 последовательных портов или нет другого драйвера мыши.


 2. КАК ЭТИМ ПОЛЬЗОВАТЬСЯ.
 ────────────────────────────────────────────────────────────────────────────
    Если  вы  хотите  установить  драйвер  мыши  в память вам надо всего лишь
 запустить  его  командой  SKMouse.exe  из  командной  строки.  После запуска
 драйвер   проверит   память  на  наличие  другой  своей  копии.  Если  такая
 обнаружится,  то  драйвер выдаст сообщение и закончит свою работу, оставив в
 памяти  предыдущую  версию  драйвера.  Если  своей копии он не обнаружит, то
 драйвер заменить процедуры обработки прерываний от клавиатуры и мыши своими.
 При  этом первоначальная версия процедуры обработки прерываний от клавиатуры
 будет  вызываться  как  и  раньше,  но  предворительно новая процедура будет
 проверять клавиатуру на нажатие клавиш управления мышью. Если нажата одна из
 таких  клавиш,  то она обрабатывается драйвером в соответствующем контексте,
 но  после  обработки не запускает первоначальную процедуру. Это сделанно для
 того,  чтобы  при  управлении  мышью  не засорять буфер клавиатуры ненужными
 кодами клавиш.


 3. КЛАВИШИ УПРАВЛЕНИЯ.
 ────────────────────────────────────────────────────────────────────────────
    Так  как драйвер предназначен для эмуляции работы мыши - он должен как-то
 передвигать   её.  Поэтому  в  качестве  устройства  управленяи  мышью  была
 выбранная клавиатура, как устройство присутствующее на всех компьютерах.
    Исходя   из   этого   ниже  приведена  таблица  клавиш  управления  с  их
 назначением.
 ┌──────────────────┬───────────────────────────────────────────────────────┐
 │ Клавиши          │  Назначение                                           │
 ├──────────────────┼───────────────────────────────────────────────────────┤
 │ Ctrl+NumLock     │  Так как драйвер использует клавиатуру для управления │
 │                  │ и  блокирует  некоторые клавишы, которые используются │
 │                  │ и для других целей, к драйверу была добавлена функция │
 │                  │ управления  режимом работы. После нажатия этих клавиш │
 │                  │ состояние     режима     драйвера     меняется     на │
 │                  │ противоположное, при этом раздается звуковой сигнал.  │
 │                  │  Режим  1  - драйвер активен(светится Scroll Lock). В │
 │                  │ этом  режиме  драйвер  мыши обрабатывает клавиатуру и │
 │                  │ и перемещает мышь если надо.                          │
 │                  │  Режим  2  -  драйвер ждет(несветится Scroll Lock). В │
 │                  │ этом  режиме  драйвер  мыши  работает,  но  отключена │
 │                  │ функция управления мыши - клавишы управления мышью не │
 │                  │ проверяются и не блокируются. В этом режиме управлять │
 │                  │ мышью    с    клавиатуры   невозможно   (этот   режим │
 │                  │ активизируется сразу после запуска драйвера).         │
 ├──────────────────┼───────────────────────────────────────────────────────┤
 │ Arrow Left       │  С помощью этих клавиш вы можете перемещать указатель │
 │ Arrow Right      │ мыши в нужном Вам направлении (не работают в режим 2) │
 │ Arrow Up         │                                                       │
 │ Arrow Down       │                                                       │
 │ Home (расширенная│                                                       │
 │ клавиатура)      │                                                       │
 │ PgUp (расширенная│                                                       │
 │ клавиатура)      │                                                       │
 │ End  (расширенная│                                                       │
 │ клавиатура)      │                                                       │
 │ PgDown           │                                                       │
 │ (расширенная     │                                                       │
 │ клавиатура)      │                                                       │
 ├──────────────────┼───────────────────────────────────────────────────────┤
 │ Insert           │  Нажатие  на эту клавишу равносильно нажатию на левую │
 │                  │ кнопку мыши (не работает в режиме 2).                 │
 ├──────────────────┼───────────────────────────────────────────────────────┤
 │ Delete           │  Нажатие на эту клавишу равносильно нажатию на правую │
 │                  │ кнопку мыши (не работает в режиме 2).                 │
 └──────────────────┴───────────────────────────────────────────────────────┘


 4. КЛЮЧИ КОМАНДНОЙ СТРОКИ.
 ────────────────────────────────────────────────────────────────────────────
    Так  как драйвер запускается из командной строки, то он имеет специальные
 ключи,  которые  задаются  в командной строке. Ниже приведена таблица на все
 эти ключи.
 ┌──────────────────┬───────────────────────────────────────────────────────┐
 │Ключи             │  Назначение                                           │
 ├──────────────────┼───────────────────────────────────────────────────────┤
 │/? /H             │  Выдает краткую справку по программе.                 │
 ├──────────────────┼───────────────────────────────────────────────────────┤
 │/INFO             │  Выдает  информацию  о уже загруженном драйвере. Если │
 │                  │ он не загружен, то загружется в память.               │
 ├──────────────────┼───────────────────────────────────────────────────────┤
 │/RELEASE          │  Выгружает  из  памяти  свою  действующую  копию если │
 │                  │ такая имеется.                                        │
 └──────────────────┴───────────────────────────────────────────────────────┘


 ПРИЛОЖЕНИЕ: ТАБЛИЦА ФУНКЦИЙ ДРАЙВЕРА МИШИ.
 ────────────────────────────────────────────────────────────────────────────
    Я счел нужным привести в этом документе список функций драйвера мыши. Все
 функции  оформлены  в  виде  таблицы  из трех колонок: шестнадцатеричный код
 функции,  описание,  указание  поддержки  функции  данным  драйвером.
    Чтобы  обратиться  к драйверу мыши Вы должны в регистр AX поместить номер
 функции    драйвера,   а   затем   вызвать   прерываение   с   номером   33h
 (шестнадцатеричный  номер). Фраза "Вход:" означает, что в указанные регистры
 нужно  поместить  значения до вызова прерывания. Фраза "Выход" означает, что
 после  вызова  прерывания  в указанных регистрах будут содержаться указанные
 значения.
 ┌─────────┬────────────────────────────────────────────────────┬───────────┐
 │ Функция │ Описание                                           │ Поддержка │
 ├─────────┼────────────────────────────────────────────────────┼───────────┤
 │ 00h     │ Сбросить драйвер.                                  │ Есть      │
 │         │ Выход: AX = $FFFF если драйвер присутствует        │           │
 │         │        BX = количество кнопок:                     │           │
 │         │             0 - не две                             │           │
 │         │             2 - две                                │           │
 │         │             3 - три                                │           │
 ├─────────┼────────────────────────────────────────────────────┼───────────┤
 │ 01h     │ Показать указатель мыши.                           │ Есть      │
 │         │ Выход: нет                                         │           │
 ├─────────┼────────────────────────────────────────────────────┼───────────┤
 │ 02h     │ Убрать указатель мыши.                             │ Есть      │
 │         │ Выход: нет                                         │           │
 ├─────────┼────────────────────────────────────────────────────┼───────────┤
 │ 03h     │ Получить координаты мыши и состояние кнопок.       │ Есть      │
 │         │ Выход: BX = состояние кнопок:                      │           │
 │         │        биты 0 - левая кнопка                       │           │
 │         │             1 - правая кнопка                      │           │
 │         │             2 - средняя кнопка                     │           │
 │         │             (1 - нажата, 0 - отпущенна)            │           │
 │         │        CX = горизонтальная координата              │           │
 │         │        DX = вертикальная координата                │           │
 ├─────────┼────────────────────────────────────────────────────┼───────────┤
 │ 04h     │ Переместить указатель в новое положение.           │ Есть      │
 │         │ Вход:  CX, DX = координаты как в функции 03h       │           │
 ├─────────┼────────────────────────────────────────────────────┼───────────┤
 │ 05h     │ Получить информацию о нажатие/отпускании кнопки    │ Есть      │
 │ 06h     │ Вход:  AX = 5 - о нажатии                          │           │
 │         │             6 - о отпускании                       │           │
 │         │        BX = кнопка                                 │           │
 │         │        биты 0 - левая кнопка                       │           │
 │         │             1 - правая кнопка                      │           │
 │         │             2 - средняя кнопка                     │           │
 │         │             (1 - нужная кнопка)                    │           │
 │         │ Выход: AX = состояние кнопок (см. BX в функции 03h)│           │
 │         │        BX = количество нажатий/отпусканий после    │           │
 │         │             последнего вызова этой функции         │           │
 │         │        CX, DX = координаты последнего нажатия/     │           │
 │         │                 отпускания                         │           │
 ├─────────┼────────────────────────────────────────────────────┼───────────┤
 │ 07h     │ Установить область перемещения указателя           │ Есть      │
 │ 08h     │ Вход:  AX = 7 - по горизонтали                     │           │
 │         │             8 - по вертикали                       │           │
 │         │        CX = минимальная координата                 │           │
 │         │        DX = максимальная координата                │           │
 ├─────────┼────────────────────────────────────────────────────┼───────────┤
 │ 09h     │ Задать форму указателя для графического режима     │ Нет       │
 │         │ Вход:  BX, CX = смещение от левого верхнего края   │           │
 │         │        ES:DX  = адрес битового изображения с маской│           │
 │         │ Выход: нет                                         │           │
 ├─────────┼────────────────────────────────────────────────────┼───────────┤
 │ 0Ah     │ Задать форму указателя для текстового режима       │ Нет       │
 │         │ Вход:  BX = флаг указателя                         │           │
 │         │             0 - программное управление             │           │
 │         │             1 - аппаратное управление              │           │
 │         │        CX = маска экрана (BX = 0) или              │           │
 │         │             верхняя строка развертки (BX = 1)      │           │
 │         │        DX = маска указателя (BX = 0) или           │           │
 │         │             нижняя строка развертки (BX = 1)       │           │
 ├─────────┼────────────────────────────────────────────────────┼───────────┤
 │ 0Bh     │ Получить счетчик шагов перемещения                 │ Есть      │
 │         │ Выход: CX, DX = количество шаго по горизонтали и   │           │
 │         │                 вертикали                          │           │
 ├─────────┼────────────────────────────────────────────────────┼───────────┤
 │ 0Ch     │ Задать условия вызова программы пользователя       │ Нет       │
 │         │ Вход: AX = 0Ch                                     │           │
 │         │       CX = условие вызова                          │           │
 │         │            биты 0 - перемещение                    │           │
 │         │                 1 - нажатие левой кнопки           │           │
 │         │                 2 - отпускание левой кнопки        │           │
 │         │                 3 - нажатие правой кнопки          │           │
 │         │                 4 - отпускание правой кнопки       │           │
 │         │                 5 - нажатие средней кнопки         │           │
 │         │                 6 - отпускание средней кнопки      │           │
 │         │       ES:DX = адрес программы пользователя         │           │
 ├─────────┼────────────────────────────────────────────────────┼───────────┤
 │ 0Dh     │ Включить эмуляцию светового пера                   │ Нет       │
 ├─────────┼────────────────────────────────────────────────────┼───────────┤
 │ 0Eh     │ Выключить эмуляцию светового пера                  │ Нет       │
 ├─────────┼────────────────────────────────────────────────────┼───────────┤
 │ 0Fh     │ Установить отношение числа шагов на единицу        │ Есть      │
 │         │ виртуального экрана                                │           │
 │         │ Вход: CX, DX = количество сотых долей дюйма по     │           │
 │         │                горизонтали и вертикали             │           │
 ├─────────┼────────────────────────────────────────────────────┼───────────┤
 │ 13h     │ Установить порог удвоения скорости смещения        │ Есть      │
 │         │ указателя мыши                                     │           │
 │         │ Вход: DX - новое значение                          │           │
 ├─────────┼────────────────────────────────────────────────────┼───────────┤
 │ 14h     │ Заменить процедуру пользователя                    │ Нет       │
 │         │ Вход: AX = 14h                                     │           │
 │         │       CX = условие вызова                          │           │
 │         │            биты 0 - перемещение                    │           │
 │         │                 1 - нажатие левой кнопки           │           │
 │         │                 2 - отпускание левой кнопки        │           │
 │         │                 3 - нажатие правой кнопки          │           │
 │         │                 4 - отпускание правой кнопки       │           │
 │         │                 5 - нажатие средней кнопки         │           │
 │         │                 6 - отпускание средней кнопки      │           │
 │         │       ES:DX = адрес программы пользователя         │           │
 │         │ Выход: значения для ранее установленной процедуры  │           │
 │         │        CX = условие вызова                         │           │
 │         │             биты 0 - перемещение                   │           │
 │         │                  1 - нажатие левой кнопки          │           │
 │         │                  2 - отпускание левой кнопки       │           │
 │         │                  3 - нажатие правой кнопки         │           │
 │         │                  4 - отпускание правой кнопки      │           │
 │         │                  5 - нажатие средней кнопки        │           │
 │         │                  6 - отпускание средней кнопки     │           │
 │         │        ES:DX = адрес программы пользователя        │           │
 ├─────────┼────────────────────────────────────────────────────┼───────────┤
 │ 15h     │ Получить размер буффера для сохранения состояния   │ Нет       │
 │         │ драйвера                                           │           │
 │         │ Вход:  AX = 15h                                    │           │
 │         │        BX = 0                                      │           │
 │         │ Выход: BX = размер буффера в байтах                │           │
 ├─────────┼────────────────────────────────────────────────────┼───────────┤
 │ 16h     │ Сохранить текущее состояние драйвера               │ Нет       │
 │         │ Вход:  AX = 16h                                    │           │
 │         │        ES:DX =адрес буффера                        │           │
 ├─────────┼────────────────────────────────────────────────────┼───────────┤
 │ 17h     │ Восстановить состояние драйвера                    │ Нет       │
 │         │ Вход:  AX = 17h                                    │           │
 │         │        ES:DX =адрес буффера                        │           │
 ├─────────┼────────────────────────────────────────────────────┼───────────┤
 │ 1Dh     │ Задать видеостраницу для отображения указателя     │ Есть      │
 │         │ Вход:  AX = 1Dh                                    │           │
 │         │        BX = номер видеостраницы                    │           │
 ├─────────┼────────────────────────────────────────────────────┼───────────┤
 │ 1Eh     │ Получить номер видеостраницы, в которой            │ Есть      │
 │         │ отображается указатель                             │           │
 │         │ Выход: BX = номер видеостраницы                    │           │
 └─────────┴────────────────────────────────────────────────────┴───────────┘



 Автор программы:          Штокало Алексей Геннадиевич
 Адрес домашней странички: www.shag.itgo.com
 E-mail:                   shag@qnx.com
 ────────────────────────────────────────────────────────────────────────────