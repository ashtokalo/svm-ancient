
 SVM.DOC   19 августа 1999 год                 Copyright (C) 1999 ShAG Studio
──────────────────────────────────────────────────────────────────────────────

                                    SVM
                           (ShAG Virtual Machina)
                                 Версия 1.0
                            19 августа 1999 год

                                 Оглавление:
  I. Регистры.
   I.1. Суматор.
   I.2. Базовый регистр.
   I.3. Счетчик.
   I.4. Регистр данных.
   I.5. Регистр начала стека.
   I.6. Регистр состояния флагов.
   I.7. Стековый указатель.
   I.8. Указатель на следующую исполняемую команду.
   I.9. Дополнительный указатель.
   I.10. Дополнительный указатель.
   I.11. Дополнительный указатель.
  II. Память.
   II.1. Карта расположения программы в памяти.
   II.2. Описание работы с памятью.
  III. Команды SVM.
   III.1. Основные определения(сокращения).
   III.2. Основные комбинации параметров в командах SVM.
   III.3. Команды SVM.


  I. Регистры.
  I.1. Суматор.
                     Структура регистра                    Диапазон значений
   ┌[30]──────────────────────────────────────────────────┐
   │                         LAX                          │   -2^63..+2^63
   ├──────────────────────────┬[19]───────────────────────┤
   │                          │            EAX            │   -2^31..+2^31
   ├──────────────────────────┼─────────────┬[08]─────────┤
   │                          │             │     AX      │   -2^15..+2^15
   ├──────────────────────────┼─────────────┼[00]──┬[01]──┤
   │                          │             │  AH  │  AL  │    -2^7..+2^7
   └──────────────────────────┴─────────────┴──────┴──────┘
   Для написания более понятных программ этот регистр используется в основном
  для хранения аргумента при выполнении математических операций.

  I.2. Базовый регистр.
                     Структура регистра                    Диапазон значений
   ┌[31]──────────────────────────────────────────────────┐
   │                         LBX                          │   -2^63..+2^63
   ├──────────────────────────┬[20]───────────────────────┤
   │                          │            EBX            │   -2^31..+2^31
   ├──────────────────────────┼─────────────┬[09]─────────┤
   │                          │             │     BX      │   -2^15..+2^15
   ├──────────────────────────┼─────────────┼[02]──┬[03]──┤
   │                          │             │  BH  │  BL  │    -2^7..+2^7
   └──────────────────────────┴─────────────┴──────┴──────┘
   Для написания более понятных программ этот регистр используется в основном
  при работе с памятью для задания смещений и адресов.

  I.3. Счетчик.
                     Структура регистра                    Диапазон значений
   ┌[32]──────────────────────────────────────────────────┐
   │                         LCX                          │   -2^63..+2^63
   ├──────────────────────────┬[21]───────────────────────┤
   │                          │            ECX            │   -2^31..+2^31
   ├──────────────────────────┼─────────────┬[10]─────────┤
   │                          │             │     CX      │   -2^15..+2^15
   ├──────────────────────────┼─────────────┼[04]──┬[05]──┤
   │                          │             │  CH  │  CL  │    -2^7..+2^7
   └──────────────────────────┴─────────────┴──────┴──────┘
   Для написания более понятных программ этот регистр используется в основном
  для хранения значения счетчика и для задания других похожих параметров.

  I.4. Регистр данных.
                     Структура регистра                    Диапазон значений
   ┌[33]──────────────────────────────────────────────────┐
   │                         LDX                          │   -2^63..+2^63
   ├──────────────────────────┬[22]───────────────────────┤
   │                          │            EDX            │   -2^31..+2^31
   ├──────────────────────────┼─────────────┬[11]─────────┤
   │                          │             │     DX      │   -2^15..+2^15
   ├──────────────────────────┼─────────────┼[06]──┬[07]──┤
   │                          │             │  DH  │  DL  │    -2^7..+2^7
   └──────────────────────────┴─────────────┴──────┴──────┘
   Для написания более понятных программ этот регистр используется в основном
  при работе с памятью для задания смещений и адресов.

  I.5. Регистр начала стека.
                     Структура регистра                    Диапазон значений
   ┌[34]──────────────────────────────────────────────────┐
   │                         LSS                          │   -2^63..+2^63
   ├──────────────────────────┬[23]───────────────────────┤
   │                          │            ESS            │   -2^31..+2^31
   ├──────────────────────────┼─────────────┬[12]─────────┤
   │                          │             │     SS      │   -2^15..+2^15
   └──────────────────────────┴─────────────┴─────────────┘
   Регистр  содержит  адрес памяти  начиная с которого  начинается стек,  при
  измениеи его значения нарушится  работа стека. Также этот  регистр содержит
  начальный адрес свободной памяти выделенной для программы.

  I.6. Регистр состояния флагов.
                     Структура регистра                    Диапазон значений
   ┌[35]──────────────────────────────────────────────────┐
   │                         LFS                          │   -2^63..+2^63
   ├──────────────────────────┬[24]───────────────────────┤
   │                          │            EFS            │   -2^31..+2^31
   ├──────────────────────────┼─────────────┬[13]─────────┤
   │                          │             │     FS      │   -2^15..+2^15
   └──────────────────────────┴─────────────┴─────────────┘
   Регистр содержит информацию о регистрах любые  изменения в регистрах могут
  влиять на ход выполнения программы и условных переходов.

   В данной  версии SVM все  флаги хранятся в  регистре  FS, остальная  часть
  регистра LFS свободна и может использоваться  на усмотрение програмиста, но
  желательно  этого не  делать для  сохранения совместимости  с  последующими
  версиями SVM.

    Расположение флагов в реситре FS              Описание флагов
    ┌───────────────────────────────┐   ┌───────┬──────────────────────────┐
    │              FS               │   │ Флаг  │ Описание                 │
    ├───┬───┬───┬───┬───┬───┬───┬───┤   ├───────┼──────────────────────────┤
    │   │   │ A │ P │ C │ Z │ S │ O │   │ O(of) │ Переполнение             │
    ├───┴───┴───┴───┴───┴───┴───┴───┤   │ S(sf) │ Знака                    │
    │          Номер бита           │   │ Z(zf) │ Нуля                     │
    ├───┬───┬───┬───┬───┬───┬───┬───┤   │ C(cf) │ Переноса                 │
    │ 7 │ 6 │ 5 │ 4 │ 3 │ 2 │ 1 │ 0 │   │ P(pf) │ Четности                 │
    └───┴───┴───┴───┴───┴───┴───┴───┘   │ A(af) │ Дополнительный           │
                                        └───────┴──────────────────────────┘

  I.7. Стековый указатель.
                     Структура регистра                    Диапазон значений
   ┌[36]──────────────────────────────────────────────────┐
   │                         LSP                          │   -2^63..+2^63
   ├──────────────────────────┬[25]───────────────────────┤
   │                          │            ESP            │   -2^31..+2^31
   ├──────────────────────────┼─────────────┬[14]─────────┤
   │                          │             │     SP      │   -2^15..+2^15
   └──────────────────────────┴─────────────┴─────────────┘
   Регистр указывает на голову стека, при изменении значения данного регистра
  можно изменить порядок ~выталкивания~ в ~втылкивания~ информации в стек.

  I.8. Указатель на следующую исполняемую команду.
                     Структура регистра                    Диапазон значений
   ┌[37]──────────────────────────────────────────────────┐
   │                         LIP                          │   -2^63..+2^63
   ├──────────────────────────┬[26]───────────────────────┤
   │                          │            EIP            │   -2^31..+2^31
   ├──────────────────────────┼─────────────┬[15]─────────┤
   │                          │             │     IP      │   -2^15..+2^15
   └──────────────────────────┴─────────────┴─────────────┘
   Регистр содержит адрес  памяти по которому находится следующая исполняемая
  команда. При  изменении  знаяения  регистра можно  изменить ход  исполнения
  программы.

  I.9. Дополнительный указатель.
                     Структура регистра                    Диапазон значений
   ┌[38]──────────────────────────────────────────────────┐
   │                         LEP                          │   -2^63..+2^63
   ├──────────────────────────┬[27]───────────────────────┤
   │                          │            EEP            │   -2^31..+2^31
   ├──────────────────────────┼─────────────┬[16]─────────┤
   │                          │             │     EP      │   -2^15..+2^15
   └──────────────────────────┴─────────────┴─────────────┘
   Регистр можно  использовать для задания  адресов памяти, а также для любых
  других целей.

  I.10. Дополнительный указатель.
                     Структура регистра                    Диапазон значений
   ┌[39]──────────────────────────────────────────────────┐
   │                         LFP                          │   -2^63..+2^63
   ├──────────────────────────┬[28]───────────────────────┤
   │                          │            EFP            │   -2^31..+2^31
   ├──────────────────────────┼─────────────┬[17]─────────┤
   │                          │             │     FP      │   -2^15..+2^15
   └──────────────────────────┴─────────────┴─────────────┘
   Регистр можно  использовать для задания  адресов памяти, а также для любых
  других целей.

  I.11. Дополнительный указатель.
                     Структура регистра                    Диапазон значений
   ┌[40]──────────────────────────────────────────────────┐
   │                         LGP                          │   -2^63..+2^63
   ├──────────────────────────┬[29]───────────────────────┤
   │                          │            EGP            │   -2^31..+2^31
   ├──────────────────────────┼─────────────┬[18]─────────┤
   │                          │             │     GP      │   -2^15..+2^15
   └──────────────────────────┴─────────────┴─────────────┘
   Регистр можно  использовать для задания  адресов памяти, а также для любых
  других целей.

  II. Память.
  II.1. Карта расположения программы в памяти.
             Карта           Адреса
     ╔═══════════════════╦── 0000000000000000h
     ║                   ║
     ║                   ║
     ║ Команды программы ║
     ║                   ║
     ║                   ║
     ╟─ ─ ─ ─ ─ ─ ─ ─ ─ ─╢
     ║                   ║
     ║   Переменные  и   ║
     ║     константы     ║
     ║     программы     ║
     ║                   ║
     ╟─ ─ ─ ─ ─ ─ ─ ─ ─ ─╫── LSS
     ║                   ║
     ║ Свободная память, ║
     ║ используется  под ║
     ║       стек        ║
     ║                   ║
     ╚═══════════════════╝
  II.2. Описание работы с памятью.
   Команды  программы,  переменные  и константы  практически  являются  одним
  блоком, но  логически разделены на  два блока. Переменные  могут находься в
  блоке с командами и наоборот. Выделяя  память под стек программист выделяет
  дополнительную память которая будет резервироваться под программу, при этом
  вся своюодная память может использоваться под стек и для других целей, хотя
  второй  вариант не  является безопасным хранением  информации. При  попытке
  получения информацию  с адреса лежащего за  пределами памяти выделенной для
  данной программы  SVM возвращает значение  ноль,а при  записи информации по
  адресу лежащему за пределами выделенной программе памяти SVM пропускает эту
  команду.

  III. Команды SVM.
  III.1. Основные определения(сокращения).
   ┌────────────┬───────────────────────────────────────────────┐
   │ Сокращение │                   Значение                    │
   ├────────────┼───────────────────────────────────────────────┤
   │ R          │ любой из регистров SVM                        │
   │ D8         │ любое число лежащее в диапазоне -2^7..+2^7    │
   │ D16        │ любое число лежащее в диапазоне -2^15..+2^15  │
   │ D32        │ любое число лежащее в диапазоне -2^31..+2^31  │
   │ D64        │ любое число лежащее в диапазоне -2^63..+2^63  │
   │ NADR       │ любое число лежащее в диапазоне 0..+2^31      │
   │ FADR       │ любое число лежащее в диапазоне 0..+2^63      │
   │ [...]      │ значение в памяти по адресу ...               │
   │ BYTE       │ определитель байта                            │
   │ WORD       │ определитель слова(два байта)                 │
   │ DWORD      │ определитель двойного слова(четыри байты)     │
   │ QWORD      │ определитель учетверенного слова(восемь байт) │
   └────────────┴───────────────────────────────────────────────┘

  III.2. Основные комбинации параметров в командах SVM.
    Тип #1     -    42
   ┌───────────────┬────────────────┐
   │ Комбинация    │ Код комбинации │
   ├───────────────┼────────────────┤
   │ R, R          │       0        │
   │ R, [R]        │       1        │
   │ R, [R+R]      │       2        │
   │ R, D8         │       3        │
   │ R, D16        │       4        │
   │ R, D32        │       5        │
   │ R, D64        │       6        │
   │ R, [NADR]     │       7        │
   │ R, [NADR+R]   │       8        │
   │ R, [FADR]     │       9        │
   │ R, [FADR+R]   │      10        │
   │ [R], R        │      11        │
   │ [R], D8       │      12        │
   │ [R], D16      │      13        │
   │ [R], D32      │      14        │
   │ [R], D64      │      15        │
   │ [R+R], R      │      16        │
   │ [R+R], D8     │      17        │
   │ [R+R], D16    │      18        │
   │ [R+R], D32    │      19        │
   │ [R+R], D64    │      20        │
   │ [NADR], R     │      21        │
   │ [NADR], D8    │      22        │
   │ [NADR], D16   │      23        │
   │ [NADR], D32   │      24        │
   │ [NADR], D64   │      25        │
   │ [NADR+R], R   │      26        │
   │ [NADR+R], D8  │      27        │
   │ [NADR+R], D16 │      28        │
   │ [NADR+R], D32 │      29        │
   │ [NADR+R], D64 │      30        │
   │ [FADR], R     │      31        │
   │ [FADR], D8    │      32        │
   │ [FADR], D16   │      33        │
   │ [FADR], D32   │      34        │
   │ [FADR], D64   │      35        │
   │ [FADR+R], R   │      36        │
   │ [FADR+R], D8  │      37        │
   │ [FADR+R], D16 │      39        │
   │ [FADR+R], D32 │      40        │
   │ [FADR+R], D64 │      41        │
   └───────────────┴────────────────┘

    Тип #2     -    144
   ┌──────────────────────────┬────────────────┐
   │        Комбинация        │ Код комбинации │
   ├──────────────────────────┼────────────────┤
   │ BYTE [R], [R]            │       0        │
   │ BYTE [R], [R+R]          │       1        │
   │ BYTE [R], [NADR]         │       2        │
   │ BYTE [R], [NADR+R]       │       3        │
   │ BYTE [R], [FADR]         │       4        │
   │ BYTE [R], [FADR+R]       │       5        │
   │ BYTE [R+R], [R]          │       6        │
   │ BYTE [R+R], [R+R]        │       7        │
   │ BYTE [R+R], [NADR]       │       8        │
   │ BYTE [R+R], [NADR+R]     │       9        │
   │ BYTE [R+R], [FADR]       │      10        │
   │ BYTE [R+R], [FADR+R]     │      11        │
   │ BYTE [NADR], [R]         │      12        │
   │ BYTE [NADR], [R+R]       │      13        │
   │ BYTE [NADR], [NADR]      │      14        │
   │ BYTE [NADR], [NADR+R]    │      15        │
   │ BYTE [NADR], [FADR]      │      16        │
   │ BYTE [NADR], [FADR+R]    │      17        │
   │ BYTE [NADR+R], [R]       │      18        │
   │ BYTE [NADR+R], [R+R]     │      19        │
   │ BYTE [NADR+R], [NADR]    │      20        │
   │ BYTE [NADR+R], [NADR+R]  │      21        │
   │ BYTE [NADR+R], [FADR]    │      22        │
   │ BYTE [NADR+R], [FADR+R]  │      23        │
   │ BYTE [FADR], [R]         │      24        │
   │ BYTE [FADR], [R+R]       │      25        │
   │ BYTE [FADR], [NADR]      │      26        │
   │ BYTE [FADR], [NADR+R]    │      27        │
   │ BYTE [FADR], [FADR]      │      28        │
   │ BYTE [FADR], [FADR+R]    │      29        │
   │ BYTE [FADR+R], [R]       │      30        │
   │ BYTE [FADR+R], [R+R]     │      31        │
   │ BYTE [FADR+R], [NADR]    │      32        │
   │ BYTE [FADR+R], [NADR+R]  │      33        │
   │ BYTE [FADR+R], [FADR]    │      34        │
   │ BYTE [FADR+R], [FADR+R]  │      35        │
   │ WORD [R], [R]            │      36        │
   │ WORD [R], [R+R]          │      37        │
   │ WORD [R], [NADR]         │      38        │
   │ WORD [R], [NADR+R]       │      39        │
   │ WORD [R], [FADR]         │      40        │
   │ WORD [R], [FADR+R]       │      41        │
   │ WORD [R+R], [R]          │      42        │
   │ WORD [R+R], [R+R]        │      43        │
   │ WORD [R+R], [NADR]       │      44        │
   │ WORD [R+R], [NADR+R]     │      45        │
   │ WORD [R+R], [FADR]       │      46        │
   │ WORD [R+R], [FADR+R]     │      47        │
   │ WORD [NADR], [R]         │      48        │
   │ WORD [NADR], [R+R]       │      49        │
   │ WORD [NADR], [NADR]      │      50        │
   │ WORD [NADR], [NADR+R]    │      51        │
   │ WORD [NADR], [FADR]      │      52        │
   │ WORD [NADR], [FADR+R]    │      53        │
   │ WORD [NADR+R], [R]       │      54        │
   │ WORD [NADR+R], [R+R]     │      55        │
   │ WORD [NADR+R], [NADR]    │      56        │
   │ WORD [NADR+R], [NADR+R]  │      57        │
   │ WORD [NADR+R], [FADR]    │      58        │
   │ WORD [NADR+R], [FADR+R]  │      59        │
   │ WORD [FADR], [R]         │      60        │
   │ WORD [FADR], [R+R]       │      61        │
   │ WORD [FADR], [NADR]      │      62        │
   │ WORD [FADR], [NADR+R]    │      63        │
   │ WORD [FADR], [FADR]      │      64        │
   │ WORD [FADR], [FADR+R]    │      65        │
   │ WORD [FADR+R], [R]       │      66        │
   │ WORD [FADR+R], [R+R]     │      67        │
   │ WORD [FADR+R], [NADR]    │      68        │
   │ WORD [FADR+R], [NADR+R]  │      69        │
   │ WORD [FADR+R], [FADR]    │      70        │
   │ WORD [FADR+R], [FADR+R]  │      71        │
   │ DWORD [R], [R]           │      72        │
   │ DWORD [R], [R+R]         │      73        │
   │ DWORD [R], [NADR]        │      74        │
   │ DWORD [R], [NADR+R]      │      75        │
   │ DWORD [R], [FADR]        │      76        │
   │ DWORD [R], [FADR+R]      │      77        │
   │ DWORD [R+R], [R]         │      78        │
   │ DWORD [R+R], [R+R]       │      79        │
   │ DWORD [R+R], [NADR]      │      80        │
   │ DWORD [R+R], [NADR+R]    │      81        │
   │ DWORD [R+R], [FADR]      │      82        │
   │ DWORD [R+R], [FADR+R]    │      83        │
   │ DWORD [NADR], [R]        │      84        │
   │ DWORD [NADR], [R+R]      │      85        │
   │ DWORD [NADR], [NADR]     │      86        │
   │ DWORD [NADR], [NADR+R]   │      87        │
   │ DWORD [NADR], [FADR]     │      88        │
   │ DWORD [NADR], [FADR+R]   │      89        │
   │ DWORD [NADR+R], [R]      │      90        │
   │ DWORD [NADR+R], [R+R]    │      91        │
   │ DWORD [NADR+R], [NADR]   │      92        │
   │ DWORD [NADR+R], [NADR+R] │      93        │
   │ DWORD [NADR+R], [FADR]   │      94        │
   │ DWORD [NADR+R], [FADR+R] │      95        │
   │ DWORD [FADR], [R]        │      96        │
   │ DWORD [FADR], [R+R]      │      97        │
   │ DWORD [FADR], [NADR]     │      98        │
   │ DWORD [FADR], [NADR+R]   │      99        │
   │ DWORD [FADR], [FADR]     │     100        │
   │ DWORD [FADR], [FADR+R]   │     101        │
   │ DWORD [FADR+R], [R]      │     102        │
   │ DWORD [FADR+R], [R+R]    │     103        │
   │ DWORD [FADR+R], [NADR]   │     104        │
   │ DWORD [FADR+R], [NADR+R] │     105        │
   │ DWORD [FADR+R], [FADR]   │     106        │
   │ DWORD [FADR+R], [FADR+R] │     107        │
   │ QWORD [R], [R]           │     108        │
   │ QWORD [R], [R+R]         │     109        │
   │ QWORD [R], [NADR]        │     110        │
   │ QWORD [R], [NADR+R]      │     111        │
   │ QWORD [R], [FADR]        │     112        │
   │ QWORD [R], [FADR+R]      │     113        │
   │ QWORD [R+R], [R]         │     114        │
   │ QWORD [R+R], [R+R]       │     115        │
   │ QWORD [R+R], [NADR]      │     116        │
   │ QWORD [R+R], [NADR+R]    │     117        │
   │ QWORD [R+R], [FADR]      │     118        │
   │ QWORD [R+R], [FADR+R]    │     119        │
   │ QWORD [NADR], [R]        │     120        │
   │ QWORD [NADR], [R+R]      │     121        │
   │ QWORD [NADR], [NADR]     │     122        │
   │ QWORD [NADR], [NADR+R]   │     123        │
   │ QWORD [NADR], [FADR]     │     124        │
   │ QWORD [NADR], [FADR+R]   │     125        │
   │ QWORD [NADR+R], [R]      │     126        │
   │ QWORD [NADR+R], [R+R]    │     127        │
   │ QWORD [NADR+R], [NADR]   │     128        │
   │ QWORD [NADR+R], [NADR+R] │     129        │
   │ QWORD [NADR+R], [FADR]   │     130        │
   │ QWORD [NADR+R], [FADR+R] │     131        │
   │ QWORD [FADR], [R]        │     132        │
   │ QWORD [FADR], [R+R]      │     133        │
   │ QWORD [FADR], [NADR]     │     134        │
   │ QWORD [FADR], [NADR+R]   │     135        │
   │ QWORD [FADR], [FADR]     │     136        │
   │ QWORD [FADR], [FADR+R]   │     137        │
   │ QWORD [FADR+R], [R]      │     138        │
   │ QWORD [FADR+R], [R+R]    │     139        │
   │ QWORD [FADR+R], [NADR]   │     140        │
   │ QWORD [FADR+R], [NADR+R] │     141        │
   │ QWORD [FADR+R], [FADR]   │     142        │
   │ QWORD [FADR+R], [FADR+R] │     143        │
   └──────────────────────────┴────────────────┘

    Тип #3     -     7
   ┌─────────────┬────────────────┐
   │ Комбинация  │ Код комбинации │
   ├─────────────┼────────────────┤
   │ R, R        │       0        │
   │ R, [R]      │       1        │
   │ R, [R+R]    │       2        │
   │ R, [NADR]   │       3        │
   │ R, [NADR+R] │       4        │
   │ R, [FADR]   │       5        │
   │ R, [FADR+R] │       6        │
   └─────────────┴────────────────┘

    Тип #4     -     25
   ┌────────────────┬────────────────┐
   │ Комбинация     │ Код комбинации │
   ├────────────────┼────────────────┤
   │ R              │        0       │
   │ BYTE [R]       │        1       │
   │ BYTE [R+R]     │        2       │
   │ BYTE [NADR]    │        3       │
   │ BYTE [NADR+R]  │        4       │
   │ BYTE [FADR]    │        5       │
   │ BYTE [FADR+R]  │        6       │
   │ WORD [R]       │        7       │
   │ WORD [R+R]     │        8       │
   │ WORD [NADR]    │        9       │
   │ WORD [NADR+R]  │        10      │
   │ WORD [FADR]    │        11      │
   │ WORD [FADR+R]  │        12      │
   │ DWORD [R]      │        13      │
   │ DWORD [R+R]    │        14      │
   │ DWORD [NADR]   │        15      │
   │ DWORD [NADR+R] │        16      │
   │ DWORD [FADR]   │        17      │
   │ DWORD [FADR+R] │        18      │
   │ QWORD [R]      │        19      │
   │ QWORD [R+R]    │        20      │
   │ QWORD [NADR]   │        21      │
   │ QWORD [NADR+R] │        22      │
   │ QWORD [FADR]   │        23      │
   │ QWORD [FADR+R] │        24      │
   └────────────────┴────────────────┘

    Тип #5     -     4
   ┌────────────┬────────────────┐
   │ Комбинация │ Код комбинации │
   ├────────────┼────────────────┤
   │ D8         │       0        │
   │ D16        │       1        │
   │ D32        │       2        │
   │ D64        │       3        │
   └────────────┴────────────────┘

    Тип #6     -     5
   ┌────────────┬────────────────┐
   │ Комбинация │ Код комбинации │
   ├────────────┼────────────────┤
   │ R, R       │       0        │
   │ R, D8      │       1        │
   │ R, D16     │       2        │
   │ R, D32     │       3        │
   │ R, D64     │       4        │
   └────────────┴────────────────┘

    Тип #7     -     6
   ┌────────────┬────────────────┐
   │ Комбинация │ Код комбинации │
   ├────────────┼────────────────┤
   │ [R]        │       0        │
   │ [R+R]      │       1        │
   │ [NADR]     │       2        │
   │ [NADR+R]   │       3        │
   │ [FADR]     │       4        │
   │ [FADR+R]   │       5        │
   └────────────┴────────────────┘

    Тип #8     -      6
   ┌─────────────┬────────────────┐
   │ Комбинация  │ Код комбинации │
   ├─────────────┼────────────────┤
   │ R, [R]      │       0        │
   │ R, [R+R]    │       1        │
   │ R, [NADR]   │       2        │
   │ R, [NADR+R] │       3        │
   │ R, [FADR]   │       4        │
   │ R, [FADR+R] │       5        │
   └─────────────┴────────────────┘

  III.3. Команды SVM.
   Код команды получается следующим образом:
    [код команды],[код комбинации],[параметры]
   через запятые отделены отдельный байты, исключая [параметры]
  ┌────────────────────────┬───────┐
  │ Команда                │  Код  │
  ├────────────────────────┴───────┤
  │ Команды перемещения            │
  ├────────────────────────┬───────┤
   │ MOV    Тип #1          │   0   │
  │ MOVS   Тип #2          │   1   │
   │ PUSH   Тип #4          │   2   │
   │ PUSH   Тип #5          │   3   │
   │ POP    Тип #4          │   4   │
   │ XCHG   Тип #3          │   5   │
  ├────────────────────────┴───────┤
  │ Арефметические команды         │
  ├────────────────────────┬───────┤
   │ INC    Тип #4          │   6   │
   │ DEC    Тип #4          │   7   │
   │ NEG    Тип #4          │   8   │
   │ ADD    Тип #1          │   9   │
   │ SUB    Тип #1          │  10   │
   │ MUL    Тип #1          │  11   │
   │ DIV    Тип #1          │  12   │
   │ CMP    Тип #1          │  13   │
  ├────────────────────────┴───────┤
  │ Логические команды             │
  ├────────────────────────┬───────┤
   │ AND    Тип #6          │  14   │
   │ OR     Тип #6          │  15   │
   │ XOR    Тип #6          │  16   │
   │ NOT    R               │  17   │
  │ RCL    Тип #6          │  18   │
  │ RCR    Тип #6          │  19   │
  │ SHL    Тип #6          │  20   │
  │ SHR    Тип #6          │  21   │
  │ TEST   Тип #6          │  22   │
  ├────────────────────────┴───────┤
  │ Команды управления потоком     │
  ├────────────────────────┬───────┤
   │ CALL   Тип #7          │  23   │
   │ JMP    Тип #7          │  24   │
   │ RET                    │  25   │
  │ CSP    Тип #5          │  26   │
  │ CSP    R               │  27   │
   │ JRNZ   Тип #8          │  28   │
   │ JRZ    Тип #8          │  29   │
   │ JO     Тип #7          │  30   │
   │ JZ     Тип #7          │  31   │
   │ JS     Тип #7          │  32   │
   │ JC     Тип #7          │  33   │
   │ JP     Тип #7          │  34   │
   │ JA     Тип #7          │  35   │
   │ JE     Тип #7          │  36   │
   │ JG     Тип #7          │  37   │
   │ JL     Тип #7          │  38   │
   │ JNO    Тип #7          │  39   │
   │ JNZ    Тип #7          │  40   │
   │ JNS    Тип #7          │  41   │
   │ JNC    Тип #7          │  42   │
   │ JNP    Тип #7          │  43   │
   │ JNA    Тип #7          │  44   │
   │ JNE    Тип #7          │  45   │
   │ JNG    Тип #7          │  46   │
   │ JNL    Тип #7          │  47   │
  ├────────────────────────┴───────┤
  │ Команды управления процессором │
  ├────────────────────────┬───────┤
   │ CLO                    │  48   │
   │ CLS                    │  49   │
   │ CLZ                    │  50   │
   │ CLC                    │  51   │
   │ CLP                    │  52   │
   │ CLA                    │  53   │
   │ STO                    │  54   │
   │ STS                    │  55   │
   │ STZ                    │  56   │
   │ STC                    │  57   │
   │ STP                    │  58   │
   │ STA                    │  59   │
   │ NOP                    │  60   │
   └────────────────────────┴───────┘